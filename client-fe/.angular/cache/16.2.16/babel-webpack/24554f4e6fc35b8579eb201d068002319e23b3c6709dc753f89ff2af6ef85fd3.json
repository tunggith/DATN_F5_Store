{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class NotifService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = \"http://localhost:8080/api/notification\";\n  }\n  // public functions\n  // 1\n  getAllByCust(custId) {\n    return this.http.get(`${this.apiUrl}/all-by-cust/${custId}`);\n  }\n  // 2\n  setIsRead(notifId) {\n    return this.http.get(`${this.apiUrl}/set-read/${notifId}`);\n  }\n  // 3\n  createNewNotification(notification) {\n    return this.http.post(`${this.apiUrl}/create`, notification);\n  }\n  static #_ = this.ɵfac = function NotifService_Factory(t) {\n    return new (t || NotifService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: NotifService,\n    factory: NotifService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"names":["NotifService","constructor","http","apiUrl","getAllByCust","custId","get","setIsRead","notifId","createNewNotification","notification","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["E:\\Du_An_Tot_Nghiep\\DATN_F5_Store\\client-fe\\src\\app\\service\\notif.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { Notification } from \"../model/class/notification.class\";\r\nimport { AddNotificationReq } from \"../model/interface/add-notifi-req.interface\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class NotifService {\r\n  private readonly apiUrl = \"http://localhost:8080/api/notification\";\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // public functions\r\n  // 1\r\n  public getAllByCust(custId: number): Observable<Notification[]> {\r\n    return this.http.get<Notification[]>(\r\n      `${this.apiUrl}/all-by-cust/${custId}`\r\n    );\r\n  }\r\n\r\n  // 2\r\n  public setIsRead(notifId: number): Observable<Notification> {\r\n    return this.http.get<Notification>(`${this.apiUrl}/set-read/${notifId}`);\r\n  }\r\n\r\n  // 3\r\n  public createNewNotification(\r\n    notification: AddNotificationReq\r\n  ): Observable<any> {\r\n    return this.http.post<any>(`${this.apiUrl}/create`, notification);\r\n  }\r\n}\r\n"],"mappings":";;AAUA,OAAM,MAAOA,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFP,KAAAC,MAAM,GAAG,wCAAwC;EAE3B;EAEvC;EACA;EACOC,YAAYA,CAACC,MAAc;IAChC,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAClB,GAAG,IAAI,CAACH,MAAM,gBAAgBE,MAAM,EAAE,CACvC;EACH;EAEA;EACOE,SAASA,CAACC,OAAe;IAC9B,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAe,GAAG,IAAI,CAACH,MAAM,aAAaK,OAAO,EAAE,CAAC;EAC1E;EAEA;EACOC,qBAAqBA,CAC1BC,YAAgC;IAEhC,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAM,GAAG,IAAI,CAACR,MAAM,SAAS,EAAEO,YAAY,CAAC;EACnE;EAAC,QAAAE,CAAA,G;qBAvBUZ,YAAY,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZjB,YAAY;IAAAkB,OAAA,EAAZlB,YAAY,CAAAmB,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}