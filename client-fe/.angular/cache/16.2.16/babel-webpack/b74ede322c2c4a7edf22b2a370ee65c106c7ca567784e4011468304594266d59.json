{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/authentication.service\";\nexport class AuthenticationInterceptor {\n  constructor(authenticationService) {\n    this.authenticationService = authenticationService;\n  }\n  intercept(request, next) {\n    // Ignore requests that don't need authentication (e.g., login)\n    const authUrl = `http://localhost:8080/auth/client`;\n    const productUrl = `http://localhost:8080/san-pham/client`;\n    const imageUrl = `http://localhost:8080/hinh-anh-sp/client`;\n    const spct = `http://localhost:8080/spct/client`;\n    const colorUrls = `http://localhost:8080/mau-sac/client`;\n    const sizeUrls = `http://localhost:8080/kich-co/client`;\n    const formUrls = `http://localhost:8080/kieu-dang/client`;\n    const designUrls = `http://localhost:8080/thiet-ke/client`;\n    const collarUrls = `http://localhost:8080/co-ao/client`;\n    const sleeveUrls = `http://localhost:8080/tay-ao/client`;\n    const materialUrls = `http://localhost:8080/chat-lieu/client`;\n    const saleEventlUrls = `http://localhost:8080/dot-giam-gia/client`;\n    const discountUrls = `http://localhost:8080/phieu-giam-gia/client`;\n    const notificationUrls = `http://localhost:8080/api/notification`;\n    const orderUrls = `http://localhost:8080/hoa-don/client`;\n    if (request.url.startsWith(authUrl) || request.url.startsWith(productUrl) || request.url.startsWith(spct) || request.url.startsWith(imageUrl) || request.url.startsWith(colorUrls) || request.url.startsWith(sizeUrls) || request.url.startsWith(formUrls) || request.url.startsWith(designUrls) || request.url.startsWith(collarUrls) || request.url.startsWith(sleeveUrls) || request.url.startsWith(materialUrls) || request.url.startsWith(saleEventlUrls) || request.url.startsWith(discountUrls) || request.url.startsWith(notificationUrls) || request.url.startsWith(orderUrls)) {\n      return next.handle(request);\n    }\n    if (request.url.startsWith(authUrl)) {\n      return next.handle(request);\n    }\n    // Set token for other requests\n    let authReq = request;\n    this.authenticationService.loadTokenFromStorage();\n    const token = this.authenticationService.getTokenFromStorage();\n    if (token != null) {\n      authReq = request.clone({\n        headers: request.headers.set(\"Authorization\", `Bearer ${token}`)\n      });\n    }\n    // authReq = request.clone({\n    //   setHeaders: {\n    //     Authorization: `Bearer ${token}`,\n    //   },\n    // });\n    return next.handle(authReq);\n  }\n  static #_ = this.ɵfac = function AuthenticationInterceptor_Factory(t) {\n    return new (t || AuthenticationInterceptor)(i0.ɵɵinject(i1.AuthenticationService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthenticationInterceptor,\n    factory: AuthenticationInterceptor.ɵfac\n  });\n}","map":{"version":3,"names":["AuthenticationInterceptor","constructor","authenticationService","intercept","request","next","authUrl","productUrl","imageUrl","spct","colorUrls","sizeUrls","formUrls","designUrls","collarUrls","sleeveUrls","materialUrls","saleEventlUrls","discountUrls","notificationUrls","orderUrls","url","startsWith","handle","authReq","loadTokenFromStorage","token","getTokenFromStorage","clone","headers","set","_","i0","ɵɵinject","i1","AuthenticationService","_2","factory","ɵfac"],"sources":["E:\\Du_An_Tot_Nghiep\\DATN_F5_Store\\client-fe\\src\\app\\interceptor\\authentication.interceptor.ts"],"sourcesContent":["// import { Injectable } from \"@angular/core\";\r\n// import {\r\n//   HttpRequest,\r\n//   HttpHandler,\r\n//   HttpEvent,\r\n//   HttpInterceptor,\r\n// } from \"@angular/common/http\";\r\n// import { Observable } from \"rxjs\";\r\n\r\n// @Injectable()\r\n// export class AuthenticationInterceptor implements HttpInterceptor {\r\n//   constructor() {}\r\n\r\n//   intercept(\r\n//     request: HttpRequest<unknown>,\r\n//     next: HttpHandler\r\n//   ): Observable<HttpEvent<unknown>> {\r\n//     return next.handle(request);\r\n//   }\r\n// }\r\n\r\nimport { Injectable } from \"@angular/core\";\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n} from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { AuthenticationService } from \"../service/authentication.service\";\r\n\r\n@Injectable()\r\nexport class AuthenticationInterceptor implements HttpInterceptor {\r\n  constructor(private authenticationService: AuthenticationService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    // Ignore requests that don't need authentication (e.g., login)\r\n    const authUrl = `http://localhost:8080/auth/client`;\r\n    const productUrl = `http://localhost:8080/san-pham/client`;\r\n    const imageUrl = `http://localhost:8080/hinh-anh-sp/client`;\r\n    const spct = `http://localhost:8080/spct/client`;\r\n    const colorUrls = `http://localhost:8080/mau-sac/client`;\r\n    const sizeUrls = `http://localhost:8080/kich-co/client`;\r\n    const formUrls = `http://localhost:8080/kieu-dang/client`;\r\n    const designUrls = `http://localhost:8080/thiet-ke/client`;\r\n    const collarUrls = `http://localhost:8080/co-ao/client`;\r\n    const sleeveUrls = `http://localhost:8080/tay-ao/client`;\r\n    const materialUrls = `http://localhost:8080/chat-lieu/client`;\r\n    const saleEventlUrls = `http://localhost:8080/dot-giam-gia/client`;\r\n    const discountUrls = `http://localhost:8080/phieu-giam-gia/client`;\r\n    const notificationUrls = `http://localhost:8080/api/notification`;\r\n    const orderUrls = `http://localhost:8080/hoa-don/client`;\r\n\r\n    if (\r\n      request.url.startsWith(authUrl) ||\r\n      request.url.startsWith(productUrl) ||\r\n      request.url.startsWith(spct) ||\r\n      request.url.startsWith(imageUrl) ||\r\n      request.url.startsWith(colorUrls) ||\r\n      request.url.startsWith(sizeUrls) ||\r\n      request.url.startsWith(formUrls) ||\r\n      request.url.startsWith(designUrls) ||\r\n      request.url.startsWith(collarUrls) ||\r\n      request.url.startsWith(sleeveUrls) ||\r\n      request.url.startsWith(materialUrls) ||\r\n      request.url.startsWith(saleEventlUrls) ||\r\n      request.url.startsWith(discountUrls) ||\r\n      request.url.startsWith(notificationUrls) ||\r\n      request.url.startsWith(orderUrls)\r\n    ) {\r\n      return next.handle(request);\r\n    }\r\n\r\n    if (request.url.startsWith(authUrl)) {\r\n      return next.handle(request);\r\n    }\r\n\r\n    // Set token for other requests\r\n    let authReq = request;\r\n    this.authenticationService.loadTokenFromStorage();\r\n    const token = this.authenticationService.getTokenFromStorage();\r\n\r\n    if (token != null) {\r\n      authReq = request.clone({\r\n        headers: request.headers.set(\"Authorization\", `Bearer ${token}`),\r\n      });\r\n    }\r\n\r\n    // authReq = request.clone({\r\n    //   setHeaders: {\r\n    //     Authorization: `Bearer ${token}`,\r\n    //   },\r\n    // });\r\n\r\n    return next.handle(authReq);\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}